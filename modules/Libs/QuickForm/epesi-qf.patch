diff -rup 3.2.10.orig/HTML/QuickForm/checkbox.php 3.2.10.new/HTML/QuickForm/checkbox.php
--- 3.2.10.orig/HTML/QuickForm/checkbox.php	2007-10-05 22:29:00.000000000 +0200
+++ 3.2.10.new/HTML/QuickForm/checkbox.php	2008-09-27 10:10:03.000000000 +0200
@@ -146,10 +146,10 @@ class HTML_QuickForm_checkbox extends HT
     function getFrozenHtml()
     {
         if ($this->getChecked()) {
-            return '<tt>[x]</tt>' .
+            return '<div class="checkbox_on"></div>' .
                    $this->_getPersistantData();
         } else {
-            return '<tt>[ ]</tt>';
+            return '<div class="checkbox_off"></div>';
         }
     } //end func getFrozenHtml
 
diff -rup 3.2.10.orig/HTML/QuickForm/element.php 3.2.10.new/HTML/QuickForm/element.php
--- 3.2.10.orig/HTML/QuickForm/element.php	2007-10-05 22:29:00.000000000 +0200
+++ 3.2.10.new/HTML/QuickForm/element.php	2008-09-27 10:39:08.000000000 +0200
@@ -353,6 +353,30 @@ class HTML_QuickForm_element extends HTM
             return null;
         }
     } //end func _findValue
+
+    /**
+     * Tries to remove the element value from the values array
+     * 
+     * @since     2.7
+     * @access    private
+     * @return    mixed
+     */
+    function _removeValue(&$values)
+    {
+        if (empty($values)) {
+            return null;
+        }
+        $elementName = $this->getName();
+        if (isset($values[$elementName])) {
+            unset($values[$elementName]);
+        } elseif (strpos($elementName, '[')) {
+            $myVar = "['" . str_replace(
+                         array('\\', '\'', ']', '['), array('\\\\', '\\\'', '', "']['"), 
+                         $elementName
+                     ) . "']";
+            eval("if(isset(\$values$myVar)) unset(\$values$myVar);");
+        } 
+    } //end func _findValue
 
     // }}}
     // {{{ onQuickFormEvent()
@@ -383,7 +407,10 @@ class HTML_QuickForm_element extends HTM
                 // default values are overriden by submitted
                 $value = $this->_findValue($caller->_constantValues);
                 if (null === $value) {
-                    $value = $this->_findValue($caller->_submitValues);
+					if($this->_flagFrozen) 
+						$this->_removeValue($caller->_submitValues);
+					else
+	                    $value = $this->_findValue($caller->_submitValues);
                     if (null === $value) {
                         $value = $this->_findValue($caller->_defaultValues);
                     }
@@ -432,7 +459,7 @@ class HTML_QuickForm_element extends HTM
         static $idx = 1;
 
         if (!$this->getAttribute('id')) {
-            $this->updateAttributes(array('id' => 'qf_' . substr(md5(microtime() . $idx++), 0, 6)));
+            $this->updateAttributes(array('id' => 'qf_'.$idx));// . substr(md5($idx++), 0, 6)));
         }
     } // end func _generateId
 
diff -rup 3.2.10.orig/HTML/QuickForm/radio.php 3.2.10.new/HTML/QuickForm/radio.php
--- 3.2.10.orig/HTML/QuickForm/radio.php	2007-10-05 22:29:01.000000000 +0200
+++ 3.2.10.new/HTML/QuickForm/radio.php	2008-09-27 10:10:03.000000000 +0200
@@ -146,10 +146,10 @@ class HTML_QuickForm_radio extends HTML_
     function getFrozenHtml()
     {
         if ($this->getChecked()) {
-            return '<tt>(x)</tt>' .
+            return '<div class="radio_on"></div>' .
                    $this->_getPersistantData();
         } else {
-            return '<tt>( )</tt>';
+            return '<div class="radio_off"></div>';
         }
     } //end func getFrozenHtml
 
diff -rup 3.2.10.orig/HTML/QuickForm.php 3.2.10.new/HTML/QuickForm.php
--- 3.2.10.orig/HTML/QuickForm.php	2007-10-05 22:29:01.000000000 +0200
+++ 3.2.10.new/HTML/QuickForm.php	2008-09-27 10:39:58.000000000 +0200
@@ -593,7 +593,9 @@ class HTML_QuickForm extends HTML_Common
         }
         $className = $GLOBALS['HTML_QUICKFORM_ELEMENT_TYPES'][$type][1];
         $includeFile = $GLOBALS['HTML_QUICKFORM_ELEMENT_TYPES'][$type][0];
-        include_once($includeFile);
+        static $cache=array();
+        if (!isset($cache[$includeFile])) include_once($includeFile);
+        $cache[$includeFile] = true;
         $elementObject =& new $className();
         for ($i = 0; $i < 5; $i++) {
             if (!isset($args[$i])) {
